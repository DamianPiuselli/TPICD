library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
titanic_df <- read_csv(“"E:\Descargas\titanic.csv"”, locale = locale(decimal_mark = ","))
titanic_df <- read_csv(“"E:\\Descargas\\titanic.csv"”, locale = locale(decimal_mark = ","))
titanic_df <- read_csv("E:\\Descargas\\titanic.csv", locale = locale(decimal_mark = ","))
view(titanic_df)
titanic_df$age
min(titanic_df$age)
min(titanic_df$age, na.rm=TRUE)
min(titanic_df$fare)
max(titanic_df$fare)
unique(titanic_df$class)
unique(titanic_df$`Port of Embarkation`)
arrange(data, age)
arrange(titanic_df, age)
arrange(titanic_df, desc(age))
arrange(titanic_df, age, fare)
arrange(titanic_df, fare,age)
titanic_sex <- filter(titanic_df, sex=='female')
View(titanic_sex)
max(titanic_sex$age, na.rm=TRUE)
titanic_who <- filter(titanic_df, who=='child')
max(titanic_who$age, na.rm=TRUE)
ggplot(data = titanic_df) +
geom_bar(aes(x=sex))
ggplot(data = titanic_df) +
geom_bar(aes(x=siblings of the passenger))
ggplot(data = titanic_df) +
geom_bar(aes(x=siblings of the passenger))
ggplot(data = titanic_df) +
geom_bar(aes(x=who))
ggplot(data = titanic_df) +
geom_bar(aes(x=siblings of the passenger))
ggplot(data = titanic_df) +
geom_bar(aes(x=sex, fill=class))
ggplot(data = titanic_df) +
geom_bar(aes(x=‘siblings of the passenger’))
new_titanic_df <- rename(titanic_df, 'Puerto' = 'Port of Embarkation')
ggplot(data = titanic_df) +     geom_bar(aes(x=sex, fill=class))
ggplot(data = titanic_df) +
geom_bar(aes(x=clase, fill=who))
ggplot(data = titanic_df) +
geom_bar(aes(x=class, fill=who))
ggplot(data = titanic_df) +
geom_bar(aes(x=who, fill=class))
ggplot(data = titanic_df) +
geom_bar(aes(x=alone, fill=class))
ggplot(data = titanic_df) +
+     geom_bar(aes(x=alone, fill=who))
ggplot(data = titanic_df) +
geom_bar(aes(x=alone, fill=who))
ggplot(data = new_titanic_df) +
geom_bar(mapping = aes(x=alone, fill = class), position = "dodge")
ggplot(data = new_titanic_df) +
geom_bar(mapping = aes(x=alone, fill = who), position = 'fill')
titanic_groupwho <- group_by(titanic_df, who)
View(titanic_who)
summarise(titanic_groupwho, n())
summarise(titanic_df, n())
titanic_groupclass <- group_by(titanic_df, class)
summarise(titanic_groupclass, n())
titanic_groupparientes <- group_by(titanic_df, parents / children aboard the Titanic)
ggplot(data = titanic_df) +
+         geom_bar(aes(x=survived, fill=class))
ggplot(data = titanic_df) +
geom_bar(aes(x=survived, fill=class))
pnorm(1.2)-pnorm(-0.5)
qnorm(1-0.97)
qnorm(0.85,4,2)
norm(1.2,75,5)-pnorm(0.2,75,5)
pnorm(74,75,5)-pnorm(79,75,5)
M=0:30
plot(0:30,dbinom(M,30,0,1))
M=0:30
plot(0:30,dbinom(M,30,0.1))
dbinom(M,30,0.1)
M=0:30
plot(0:30,dbinom(M,30,0.1),type='h')
abline(v=3,col='red')
M=0:30
p=dbinom(M,30,0.1)
plot(0:30,dbinom(M,30,0.1),type='h')
abline(v=3,col='red')
M*p
sum(M*p)
E=sum(M*p)
M=0:30
p=dbinom(M,30,0.1)
plot(0:30,p,type='h')
abline(v=3,col='red')
M*p
E=sum(M*p)
M=0:30
p=dbinom(M,30,0.1)
plot(0:30,p,type='h')
abline(v=3,col='red')
M*p
E=sum(M*p)
sum((M-E)**2*P)
M=0:30
p=dbinom(M,30,0.1)
plot(0:30,p,type='h')
abline(v=3,col='red')
M*p
E=sum(M*p)
sum((M-E)**2p)
sum((M-E)**2*p)
sqrt(sum((M-E)**2*p))
dpois(10,10)
x=0:10
plot(0:10,dpois(x,10))
x=0:10
k=dpois(x,10)
plot(0:10,k)
E=sum(x*p)
E=sum(x*k)
x=0:100
k=dpois(x,10)
x=0:100
k=dpois(x,100)
plot(0:100,k)
x=0:1000
k=dpois(x,1000)
plot(0:1000,k)
x=0:1000
k=dpois(x,100)
plot(0:1000,k)
x=0:200
k=dpois(x,100)
plot(0:200,k)
J=sum(x*k)
x=70:130
k=dpois(x,100)
plot(X,k)
x=70:130
k=dpois(x,100)
plot(70:130,k)
x=70:130
k=dpois(x,100)
plot(70:130,k,type='h')
sum((x-J)**2*k)
J=sum(x*k)
J=sum(x*k)
J=sum(x*k)
x=0:200
k=dpois(x,100)
plot(0:200,k,type='h')
J=sum(x*k)
x=0:200
k=dpois(x,100)
plot(70:130,k,type='h')
x=0:200
k=dpois(x,100)
plot(0:200,k,type='h')
x*k*(1-x)
V=10*k*(1-10)
setwd("E:/Escritorio/TPICD/TPICD")
orders <- read_csv("olist_orders_dataset.csv")
library(tidyverse)
library(modelr)
orders <- read_csv("olist_orders_dataset.csv")
order_items <- read_csv("olist_order_items_dataset.csv")
products <- read_csv("olist_products_dataset.csv")
sellers <- read_csv("olist_sellers_dataset.csv")
items <- read_csv("olist_order_items_dataset.csv")
payment <- read_csv("olist_order_payments_dataset.csv")
customers <- read_csv("olist_customers_dataset.csv")
geolocalation <- read_csv("olist_geolocation_dataset.csv")
View(orders)
orders %>%
mutate(mes = cut(order_purchase_timestamp ,"month")) %>%
group_by(mes) %>%
summarise(numero_compras=n()) %>%
ggplot(aes(y=numero_compras, x=mes))+
geom_point()
orders %>%
mutate(mes = cut(order_purchase_timestamp ,"month")) %>%
group_by(mes) %>%
summarise(numero_compras=n()) %>%
ggplot(aes(y=numero_compras, x=mes))+
geom_point()+
coord_flip()
envios <- order_items %>%
left_join(orders, by="order_id") %>%
left_join(customers, by="customer_id") %>%
left_join(sellers, by="seller_id") %>%
left_join(products, by="product_id") %>%
mutate(product_volume = product_length_cm*product_height_cm*product_width_cm) %>%
left_join(geolocalation, by=c("customer_zip_code_prefix" = "geolocation_zip_code_prefix")) %>%
rename(customer_lat = geolocation_lat) %>%
rename(customer_lng = geolocation_lng) %>%
left_join(geolocalation, by=c("seller_zip_code_prefix" = "geolocation_zip_code_prefix")) %>%
rename(seller_lat = geolocation_lat) %>%
rename(seller_lng = geolocation_lng) %>%
mutate(distancia_envio = haversine_distance(customer_lat, customer_lng, seller_lat, seller_lng)) %>%
filter(freight_value > 0)
geolocalation <- geolocalation %>%
group_by(geolocation_zip_code_prefix) %>%
summarise(geolocation_lat = median(geolocation_lat),
geolocation_lng = median(geolocation_lng))
envios <- order_items %>%
left_join(orders, by="order_id") %>%
left_join(customers, by="customer_id") %>%
left_join(sellers, by="seller_id") %>%
left_join(products, by="product_id") %>%
mutate(product_volume = product_length_cm*product_height_cm*product_width_cm) %>%
left_join(geolocalation, by=c("customer_zip_code_prefix" = "geolocation_zip_code_prefix")) %>%
rename(customer_lat = geolocation_lat) %>%
rename(customer_lng = geolocation_lng) %>%
left_join(geolocalation, by=c("seller_zip_code_prefix" = "geolocation_zip_code_prefix")) %>%
rename(seller_lat = geolocation_lat) %>%
rename(seller_lng = geolocation_lng) %>%
mutate(distancia_envio = haversine_distance(customer_lat, customer_lng, seller_lat, seller_lng)) %>%
filter(freight_value > 0)
haversine_distance <- function(lat1, lon1, lat2, lon2) {
# Radio de la Tierra en kilómetros
earth_radius <- 6371
# Convertir las coordenadas a radianes
lat1 <- lat1 * pi / 180
lon1 <- lon1 * pi / 180
lat2 <- lat2 * pi / 180
lon2 <- lon2 * pi / 180
# Diferencia entre las latitudes y longitudes
dlat <- lat2 - lat1
dlon <- lon2 - lon1
# Calcular el haversine
a <- sin(dlat/2)^2 + cos(lat1) * cos(lat2) * sin(dlon/2)^2
c <- 2 * asin(sqrt(a))
# Calcular la distancia
distance <- earth_radius * c
return(distance)
}
envios <- order_items %>%
left_join(orders, by="order_id") %>%
left_join(customers, by="customer_id") %>%
left_join(sellers, by="seller_id") %>%
left_join(products, by="product_id") %>%
mutate(product_volume = product_length_cm*product_height_cm*product_width_cm) %>%
left_join(geolocalation, by=c("customer_zip_code_prefix" = "geolocation_zip_code_prefix")) %>%
rename(customer_lat = geolocation_lat) %>%
rename(customer_lng = geolocation_lng) %>%
left_join(geolocalation, by=c("seller_zip_code_prefix" = "geolocation_zip_code_prefix")) %>%
rename(seller_lat = geolocation_lat) %>%
rename(seller_lng = geolocation_lng) %>%
mutate(distancia_envio = haversine_distance(customer_lat, customer_lng, seller_lat, seller_lng)) %>%
filter(freight_value > 0)
View(envios)
payment %>%
filter(payment_type=="credit_card") %>%
ggplot(aes(x=payment_installments)) +
geom_boxplot()
View(payment)
payment %>%
filter(payment_type=="credit_card") %>%
ggplot(aes(x=payment_installments, y=payment_value)) +
geom_boxplot()
payment %>%
filter(payment_type=="credit_card") %>%
ggplot(aes(x = as.factor(payment_installments), y=payment_value)) +
geom_boxplot()
payment %>%
filter(payment_type=="credit_card") %>%
ggplot(aes(x = as.factor(payment_installments), y=payment_value)) +
ylim(c(-1000, 5000))
payment %>%
filter(payment_type=="credit_card") %>%
ggplot(aes(x = as.factor(payment_installments), y=payment_value)) +
ylim(c(0, 5000))
payment %>%
filter(payment_type=="credit_card") %>%
ggplot(aes(x = as.factor(payment_installments), y=payment_value)) +
ylim(c(0, 500))+
geom_boxplot()
payment %>%
filter(payment_type=="credit_card") %>%
group_by(payment_installments) %>%
summarise(n=n())
payment %>%
filter(payment_type=="credit_card") %>%
group_by(payment_installments) %>%
summarise(n=n()) %>%
order()
payment %>%
filter(payment_type=="credit_card") %>%
group_by(payment_installments) %>%
summarise(n=n()) %>%
arrange(desc(n))
payment %>%
filter(payment_type=="credit_card") %>%
filter(payment_installments < 11) %>%
ggplot(aes(x = as.factor(payment_installments), y=payment_value)) +
ylim(c(0, 500))+
geom_boxplot()
payment %>%
filter(payment_type=="credit_card") %>%
filter(payment_installments < 11) %>%
ggplot(aes(x = as.factor(payment_installments), y=payment_value)) +
geom_boxplot()
payment %>%
filter(payment_type=="credit_card") %>%
filter(payment_installments < 11) %>%
ggplot(aes(x = as.factor(payment_installments), y=payment_value)) +
ylim(c(0, 500))+
geom_boxplot()
payment %>%
filter(payment_type=="credit_card") %>%
filter(payment_installments < 11, payment_installments > 0) %>%
ggplot(aes(x = as.factor(payment_installments), y=payment_value)) +
ylim(c(0, 500))+
geom_boxplot()
payment %>%
filter(payment_type=="credit_card") %>%
filter(payment_installments == 9)
test<- payment %>%
filter(payment_type=="credit_card") %>%
filter(payment_installments == 9)
View(test)
mod1 = lm(data=envios, freight_value ~ distancia_envio + product_volume + product_weight_g)
summary(mod1) #R^2 0.555, todas las variables altamente significativas.
envios %>% add_predictions(model=mod1) %>%
ggplot(aes(y=pred, x=freight_value))+
geom_point()
envios %>% add_predictions(model=mod1) %>%
ggplot(aes(y=pred, x=freight_value))+
geom_point()
View(envios)
envios %>% add_predictions(model=mod2) %>%
ggplot(aes(y=pred, x=freight_value))+
geom_point()
library(tidyverse)
library(modelr)
envios %>% add_predictions(model=mod1) %>%
ggplot(aes(y=pred, x=freight_value))+
geom_point()
envios %>% add_predictions(model=mod1) %>%
ggplot(aes(y=pred, x=freight_value))+
geom_point(alpha=0.1)
envios %>%
ggplot(aes(x=customer_state))+
geom_bar()
envios %>%
ggplot(aes(x=seller_state))+
geom_bar()
## Modelo para envios SP-SP
envios_sp <- envios %>%
filter(customer_state == "SP", seller_state == "SP")
View(envios_sp)
envios <- order_items %>%
left_join(orders, by="order_id") %>%
left_join(customers, by="customer_id") %>%
left_join(sellers, by="seller_id") %>%
left_join(products, by="product_id") %>%
mutate(product_volume = product_length_cm*product_height_cm*product_width_cm) %>%
left_join(geolocalation, by=c("customer_zip_code_prefix" = "geolocation_zip_code_prefix")) %>%
rename(customer_lat = geolocation_lat) %>%
rename(customer_lng = geolocation_lng) %>%
left_join(geolocalation, by=c("seller_zip_code_prefix" = "geolocation_zip_code_prefix")) %>%
rename(seller_lat = geolocation_lat) %>%
rename(seller_lng = geolocation_lng) %>%
mutate(distancia_envio = haversine_distance(customer_lat, customer_lng, seller_lat, seller_lng)) %>%
filter(freight_value > 0) %>% #filtro envios bonificados
select(price, freight_value, distancia_envio, customer_state, seller_state, product_category_name, product_volume, product_weight_g)
envios %>%
ggplot(aes(x=customer_state))+
geom_bar()
envios %>%
ggplot(aes(x=seller_state))+
geom_bar()
## Modelo para envios SP-SP
envios_sp <- envios %>%
filter(customer_state == "SP", seller_state == "SP")
View(envios_sp)
mod3 = lm(data=envios_sp, freight_value ~ distancia_envio + product_volume + product_weight_g)
summary(mod3)
envios_sp %>% add_predictions(model=mod3) %>%
ggplot(aes(y=pred, x=freight_value))+
geom_point(alpha=0.1)
plot(mod3)
## Categorias para envios SP-SP
envios_sp %>% ggplot(aes(x=product_category_name))+geom_bar()
envios_sp %>% ggplot(aes(x=head(product_category_name))+geom_bar()
envios_sp %>% ggplot(aes(x=head(product_category_name)))+geom_bar()
head(envios_sp$product_category_name)
envios_sp %>%
group_by(product_category_name) %>%
summarise(n=N()) %>%
sort(n)
envios_sp %>%
group_by(product_category_name) %>%
summarise(n=N()) %>%
arrange(n)
envios_sp %>%
group_by(product_category_name) %>%
summarise(n=n()) %>%
arrange(n)
envios_sp %>%
group_by(product_category_name) %>%
summarise(n=n()) %>%
arrange(-n)
envios_sp %>%
group_by(product_category_name) %>%
summarise(n=n()) %>%
arrange(-n) %>%
head(10)
envios_sp_telefonia <- envios_sp %>% filter(product_category_name == "telefonia")
mod4 = lm(data=envios_sp_telefonia, freight_value ~ distancia_envio + product_volume + product_weight_g)
summary(mod4)
envios_sp_beleza_saude <- envios_sp %>% filter(product_category_name == "beleza_saude")
mod4 = lm(data=envios_sp_beleza_saude, freight_value ~ distancia_envio + product_volume + product_weight_g)
summary(mod4)
mod5 = lm(data=envios_sp_beleza_saude, freight_value ~ distancia_envio * product_volume * product_weight_g)
summary(mod5)
anova(mod4,mod5)
plot(mod4)
mod6 = lm(data=envios, freight_value ~ distancia_envio + product_volume + product_weight_g + product_category_name)
summary(mod6)
mod6 = lm(data=envios, freight_value ~ distancia_envio * product_volume * product_weight_g * product_category_name)
summary(mod6)
summary(mod3)
## Modelo global por categoría
envios_beleza_saude <- envios %>% filter(product_category_name == "beleza_saude")
mod6 = lm(data=envios_beleza_saude, freight_value ~ distancia_envio + product_volume + product_weight_g)
summary(mod6)
plot(mod6)
summary(mod4)
envios_beleza_saude %>% add_predictions(model=mod6) %>%
ggplot(aes(y=pred, x=freight_value))+
geom_point(alpha=0.1)
envios_beleza_saude %>% add_predictions(model=mod6) %>%
ggplot(aes(x=pred, y=freight_value))+
geom_point(alpha=0.1)+
geom_line()
envios_beleza_saude %>% add_predictions(model=mod6) %>%
ggplot(aes(x=pred, y=freight_value))+
geom_point(alpha=0.1)
envios_beleza_saude %>% add_predictions(model=mod6) %>%
ggplot(aes(x=pred, y=freight_value))+
geom_point(alpha=0.1)+
geom_abline(slope=1, intercept = 0)
envios_beleza_saude %>% add_predictions(model=mod6) %>%
ggplot(aes(x=pred, y=freight_value))+
geom_point(alpha=0.1)+
geom_abline(slope=1, intercept = 0, color="red")
?xlim
envios_beleza_saude %>% add_predictions(model=mod6) %>%
ggplot(aes(x=pred, y=freight_value))+
geom_point(alpha=0.1)+
geom_abline(slope=1, intercept = 0, color="red")+
xlim(0,50)
envios_beleza_saude %>% add_predictions(model=mod6) %>%
ggplot(aes(x=pred, y=freight_value))+
geom_point(alpha=0.1)+
geom_abline(slope=1, intercept = 0, color="red")+
xlim(0,50)+
ylim(0,50)
envios_beleza_saude %>% add_predictions(model=mod6) %>%
ggplot(aes(y=pred, x=freight_value))+
geom_point(alpha=0.1)+
geom_abline(slope=1, intercept = 0, color="red")+
xlim(0,50)+
ylim(0,50)
envios_beleza_saude %>% add_predictions(model=mod6) %>%
ggplot(aes(y=pred, x=freight_value))+
geom_point(alpha=0.05)+
geom_abline(slope=1, intercept = 0, color="red")+
xlim(0,50)+
ylim(0,50)
envios_beleza_saude %>% add_predictions(model=mod6) %>%
ggplot(aes(y=pred, x=freight_value))+
geom_point(alpha=0.2)+
geom_abline(slope=1, intercept = 0, color="red")+
xlim(0,50)+
ylim(0,50)
envios_sp_beleza_saude %>% add_predictions(model=mod4) %>%
ggplot(aes(y=pred, x=freight_value))+
geom_point(alpha=0.2)+
geom_abline(slope=1, intercept = 0, color="red")+
xlim(0,50)+
ylim(0,50)
View(sellers)
reviews <- read_csv("olist_order_reviews_dataset.csv")
View(reviews)
